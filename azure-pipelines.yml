trigger:
  - main
  
variables:
  - group: bk-terraform-backend

  
pool:
    vmImage: ubuntu-latest
  
stages:
  - stage: plan
    displayName: "Plan"
    jobs:
      - job: plan
        displayName: Terraform Plan
        
        steps:
        - checkout: self
          fetchDepth: 1
        - task: TerraformTaskV3@3
          displayName: init 
          inputs:
            command: init
            backendServiceArm: $(service_connection_id)
            backendAzureRmResourceGroupName: $(backend_resource_group_name)
            backendAzureRmStorageAccountName: $(backend_storage_account_name)
            backendAzureRmContainerName: $(backend_container_name)
            backendAzureRmKey: $(backend_container_key)
        #- task: TerraformTaskV3@3
        # displayName: validate
        #  inputs:
        #    command: validate
        #    backendServiceArm: $(service_connection_id)
        #    backendAzureRmResourceGroupName: $(backend_resource_group_name)
        #    backendAzureRmStorageAccountName: $(backend_storage_account_name)
        #    backendAzureRmContainerName: $(backend_container_name)
        #    backendAzureRmKey: $(backend_container_key)
        - task: TerraformTaskV3@3
          displayName: plan
          timeoutInMinutes: 60
          inputs:
            command: plan
            commandOptions: -input=false -lock-timeout=60s
            environmentServiceNameAzureRM: $(service_connection_id)
            backendServiceArm: $(service_connection_id)
            backendAzureRmResourceGroupName: $(backend_resource_group_name)
            backendAzureRmStorageAccountName: $(backend_storage_account_name)
            backendAzureRmContainerName: $(backend_container_name)
            backendAzureRmKey: $(backend_container_key)
          env:
            TF_VAR_ad_ds_subnet_address_prefix: $(ad_ds_subnet_address_prefix)
            TF_VAR_allowed_management_networks: $(allowed_management_networks)
            TF_VAR_connectivity_subscription_id: $(connectivity_subscription_id)
            TF_VAR_deploy_connectivity_resources: $(deploy_connectivity_resources)
            TF_VAR_deploy_identity_resources: $(deploy_identity_resources)
            TF_VAR_deploy_management_resources: $(deploy_management_resources)
            TF_VAR_identity_subscription_id: $(identity_subscription_id)
            TF_VAR_identity_vnet_address_space: $(identity_vnet_address_space)
            TF_VAR_keyvault_admins: $(keyvault_admins)
            TF_VAR_management_subscription_id: $(management_subscription_id)
            TF_VAR_root_id: $(root_id)
            TF_VAR_root_name: $(root_name)
            TF_VAR_security_alerts_email_address: $(security_alerts_email_address)
            TF_VAR_decommissioned_subscription_ids: $(decommissioned_subscription_ids)

  - stage: deploy
    displayName: "Deploy to Azure"
    condition: and(succeeded(), ne(variables['Build.Reason'], 'PullRequest'))
    dependsOn: plan
    jobs:
    - deployment: "prod_deploy"
      displayName: "Deploy to Production environment"
      environment: "bk-azure-production"
      strategy:
        runOnce:
          deploy:
            steps:
              - checkout: self
                fetchDepth: 1
              - task: TerraformTaskV3@3
                displayName: init
                inputs:
                  backendServiceArm: $(service_connection_id)
                  backendAzureRmResourceGroupName: $(backend_resource_group_name)
                  backendAzureRmStorageAccountName: $(backend_storage_account_name)
                  backendAzureRmContainerName: $(backend_container_name)
                  backendAzureRmKey: $(backend_container_key)
              - task: TerraformTaskV3@3
                displayName: apply
                timeoutInMinutes: 60
                inputs:
                  command: apply
                  commandOptions: -input=false -lock-timeout=60s -no-color
                  environmentServiceNameAzureRM: $(service_connection_id)
                  backendServiceArm: $(service_connection_id)
                  backendAzureRmResourceGroupName: $(backend_resource_group_name)
                  backendAzureRmStorageAccountName: $(backend_storage_account_name)
                  backendAzureRmContainerName: $(backend_container_name)
                  backendAzureRmKey: $(backend_container_key)
                env:
                  TF_VAR_allowed_management_networks: $(allowed_management_networks)
                  TF_VAR_connectivity_subscription_id: $(connectivity_subscription_id)
                  TF_VAR_deploy_connectivity_resources: $(deploy_connectivity_resources)
                  TF_VAR_deploy_identity_resources: $(deploy_identity_resources)
                  TF_VAR_deploy_management_resources: $(deploy_management_resources)
                  TF_VAR_identity_subscription_id: $(identity_subscription_id)
                  TF_VAR_keyvault_admins: $(keyvault_admins)
                  TF_VAR_management_subscription_id: $(management_subscription_id)
                  TF_VAR_root_id: $(root_id)
                  TF_VAR_root_name: $(root_name)
                  TF_VAR_security_alerts_email_address: $(security_alerts_email_address)
                  TF_VAR_decommissioned_subscription_ids: $(decommissioned_subscription_ids)
